---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2023/11/8 11:25
---
local LuaClass = require("Core/LuaClass")
local UIViewModel = require("UI/UIViewModel")
local ChocoboRaceSkillDisplayCfg = require("TableCfg/ChocoboRaceSkillDisplayCfg")
local TimeUtil = require("Utils/TimeUtil")
local TimerMgr = require("Timer/TimerMgr")
local ProtoRes = require("Protocol/ProtoRes")
local ChocoboRaceSkillCfg = require("TableCfg/ChocoboRaceSkillCfg")
local ChocoboRaceUtil = require("Game/Chocobo/Race/ChocoboRaceUtil")
local ChocoboDefine = require("Game/Chocobo/ChocoboDefine")

---@class ChocoboRaceSkillItemVM : UIViewModel
local ChocoboRaceSkillItemVM = LuaClass(UIViewModel)

---Ctor
function ChocoboRaceSkillItemVM:Ctor()
    self.SkillID = 0
    self.SkillIcon = ""
    self.SkillCDText = ""
    self.NormalCDPercent = 0
    self.bNormalCD = false
    self.ReplaceCDTimer = 0
    self.CDEndTime = 0
    self.CDTime = 0
    self.IsCD = false
    self.IsVisible = false
    self.IsSeal = false
    self.IsShowLimitDash = false
    self.IsLimitDash = false
    self.UseCount = 0
    self.IsShowConsume = false
    self.BaseCostNum = 0
    self.CostNum = 0
    self.PassiveEffect = 0
    self.PassiveEffectParam = {}
    self.CostTextColor = "d5d5d5FF"
    self.PlayAnimCDFinish = false
    self.IsDisabled = false
    self.IsShowMask = false
    self.HasEnoughStamina = true
    self.InvocationStatus = ProtoRes.CHOCOBO_RACE_STATUS.CHOCOBO_EFFECT_NONE
    self.Effect = ProtoRes.Game.GameRaceEffect.RaceEffectNone
end

function ChocoboRaceSkillItemVM:OnEnd()
    if self.ReplaceCDTimer ~= 0 then
        TimerMgr:CancelTimer(self.ReplaceCDTimer)
        self.ReplaceCDTimer = 0
    end
end

function ChocoboRaceSkillItemVM:UpdateSkillID(ID, Passive, PassiveLevel)
    self.SkillID = ID
    self.PassiveEffect = 0
    self.PassiveEffectParam = {}
    
    -- 处理被动技能
    if Passive > 0 then
        local PassiveCfg = ChocoboRaceSkillCfg:FindCfgByKey(Passive)
        if PassiveCfg and PassiveCfg.Level then
            self.PassiveEffect = PassiveCfg.Effect or 0
            local LevelParams = PassiveCfg.Level[PassiveLevel]
            if LevelParams then
                self.PassiveEffectParam = LevelParams.Param
            end
        end
    end
    
    local SkillDisplayCfg = ChocoboRaceSkillDisplayCfg:FindCfgByKey(self.SkillID)
    if SkillDisplayCfg == nil then
        self.IsVisible = false
        return 
    end

    self.SkillIcon = SkillDisplayCfg.Icon
    
    local SkillCfg = ChocoboRaceSkillCfg:FindCfgByKey(self.SkillID)
    if SkillCfg then
        self.BaseCostNum = (SkillCfg.Cost or {}).Max or 0
        self.CostNum = self.BaseCostNum
        if self.CostNum > 0 then
            self.IsShowConsume = true
        end
        self.Effect = SkillCfg.Effect
        self.InvocationStatus = SkillCfg.InvocationStatus
        self.IsShowLimitDash = SkillCfg.InvocationStatus == ProtoRes.CHOCOBO_RACE_STATUS.CHOCOBO_EFFECT_LIMIT_DASH
        self.IsVisible = true
    end
end

function ChocoboRaceSkillItemVM:UpdateSkillCD(CDEndTimeMs)
    if CDEndTimeMs == nil or CDEndTimeMs <= 0 then
        self:ResetSkillCDState()
        return
    end

    local NowTimeMS = TimeUtil.GetServerTimeMS()

    -- 如果新CD比当前剩余时间短，则忽略 (取最长CD)
    if self.IsCD and CDEndTimeMs <= self.CDEndTime then
        ChocoboRaceUtil.Log(string.format("Ignore shorter CD: SkillID=%d, NewCD=%dms, CurrentRemain=%dms", 
                self.SkillID, CDEndTimeMs - NowTimeMS, self.CDEndTime - NowTimeMS))
        return
    end

    -- 重置当前CD状态
    if self.ReplaceCDTimer ~= 0 then
        TimerMgr:CancelTimer(self.ReplaceCDTimer)
        self.ReplaceCDTimer = 0
    end

    -- 更新CD状态
    self.PlayAnimCDFinish = false
    self.IsPlayClickAnim = true
    self.CDTime = CDEndTimeMs - NowTimeMS
    self.CDEndTime = CDEndTimeMs
    self.IsCD = true
    self:UpdateShowMask()

    ChocoboRaceUtil.Log(string.format("Set CD: SkillID=%d, Duration=%dms, EndAt=%d", self.SkillID, self.CDTime, CDEndTimeMs))

    self.ReplaceCDTimer = TimerMgr:AddTimer(self, self.TickSkillCD, 0, 0.1, 0)
end


function ChocoboRaceSkillItemVM:TickSkillCD()
    local SubNum = self.CDEndTime - TimeUtil.GetServerTimeMS()
    if SubNum > 0 then
        self.bNormalCD = true
        self.SkillCDText = tostring(math.ceil(SubNum / 1000))
        self.NormalCDPercent = SubNum / self.CDTime
    else
        TimerMgr:CancelTimer(self.ReplaceCDTimer)
        self.ReplaceCDTimer = 0
        self.PlayAnimCDFinish = true
        self:ResetSkillCDState()
    end
end

function ChocoboRaceSkillItemVM:ResetSkillCDState()
    if self.ReplaceCDTimer ~= 0 then
        TimerMgr:CancelTimer(self.ReplaceCDTimer)
        self.ReplaceCDTimer = 0
    end
    
    self.SkillCDText = ""
    self.NormalCDPercent = 0
    self.bNormalCD = false
    self.IsCD = false
    self.IsPlayClickAnim = false
    self:UpdateShowMask()
end

function ChocoboRaceSkillItemVM:UpdateSeal(Value)
    self.IsSeal = Value
    self:UpdateShowMask()
end

function ChocoboRaceSkillItemVM:SetIsDisabled(Value)
    self.IsDisabled = Value
    self:UpdateShowMask()
end

function ChocoboRaceSkillItemVM:UpdateShowMask()
    --local OldValue = self.IsShowMask
    if self.IsCD then
        self.IsShowMask = false
    else
        self.IsShowMask = not self.HasEnoughStamina or self.IsSeal or self.IsDisabled
    end

    --if ChocoboDefine.DEBUG_RACE then
    --    if OldValue ~= self.IsShowMask then
    --        local Reason = ""
    --        if self.IsCD then
    --            Reason = "CD中强制隐藏"
    --        else
    --            local parts = {}
    --            if not self.HasEnoughStamina then table.insert(parts, "体力不足") end
    --            if self.IsSeal then table.insert(parts, "被封印") end
    --            if self.IsDisabled then table.insert(parts, "被禁用") end
    --
    --            Reason = #parts > 0
    --                    and table.concat(parts, "+")
    --                    or "无限制条件"
    --        end
    --
    --        ChocoboRaceUtil.Log(string.format(
    --                "[技能遮罩] ID:%d 状态:%s->%s 原因:%s (CD:%s 体力:%s 封印:%s 禁用:%s)",
    --                self.SkillID,
    --                tostring(OldValue),
    --                tostring(self.IsShowMask),
    --                Reason,
    --                tostring(self.IsCD),
    --                self.HasEnoughStamina and "足够" or "不足",
    --                tostring(self.IsSeal),
    --                tostring(self.IsDisabled)
    --        ))
    --    end
    --end
end

-- 检查技能是否可用
function ChocoboRaceSkillItemVM:IsUsable()
    return not self.IsCD
            and not self.IsSeal
            and not self.IsDisabled
            and self.HasEnoughStamina
end

function ChocoboRaceSkillItemVM:UpdateLimitDash(Value)
    self.IsLimitDash = Value
end

function ChocoboRaceSkillItemVM:UpdateStamina(Value)
    -- 坚韧不拔被动技能特殊处理 
    if self.PassiveEffect == ProtoRes.Game.GameRaceEffect.RaceEffectTough then
        local ActiveStamina = self.PassiveEffectParam[1] or 0
        if Value <= ActiveStamina then
            self.CostNum = math.floor((self.BaseCostNum / 2) + 0.5)
        end
    end
    
    self.HasEnoughStamina = Value > self.CostNum
    self:UpdateShowMask()
    local NewColor = self.HasEnoughStamina and "d5d5d5FF" or "dc5868FF"
    if self.CostTextColor ~= NewColor then
        self.CostTextColor = NewColor
    end
end

return ChocoboRaceSkillItemVM
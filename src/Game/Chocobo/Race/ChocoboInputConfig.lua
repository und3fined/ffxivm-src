---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2024/2/20 11:08
---

local ProtoCS = require("Protocol/ProtoCS")
local ChocoboDefine = require("Game/Chocobo/ChocoboDefine")
local IE_Pressed = _G.UE.EInputEvent.IE_Pressed
local IE_Released = _G.UE.EInputEvent.IE_Released

local ChocoboInputConfig = {}

function ChocoboInputConfig.OnPressed_W()
    local Racer = _G.ChocoboRaceMgr:GetRacerByIndex()
    if Racer == nil then return end

    if _G.ChocoboRaceMgr:GetGameState() ~= ChocoboDefine.GAME_STATE_ENUM.BEGIN then
        return
    end
    
    Racer:SetKeyUp(true)
    _G.ChocoboRaceMgr:ReqRaceCtrl(ProtoCS.ChocoboRaceCtrl.ChocoboRaceParamAbilityAcc, true)
end

function ChocoboInputConfig.OnReleased_W()
    local Racer = _G.ChocoboRaceMgr:GetRacerByIndex()
    if Racer == nil then return end

    if _G.ChocoboRaceMgr:GetGameState() ~= ChocoboDefine.GAME_STATE_ENUM.BEGIN then
        return
    end
    
    Racer:SetKeyUp(false)
    _G.ChocoboRaceMgr:ReqRaceCtrl(ProtoCS.ChocoboRaceCtrl.ChocoboRaceParamAbilityAcc, false)
end

function ChocoboInputConfig.OnPressed_A()
    local Racer = _G.ChocoboRaceMgr:GetRacerByIndex()
    if Racer == nil then return end
    
    if _G.ChocoboRaceMgr:GetGameState() ~= ChocoboDefine.GAME_STATE_ENUM.BEGIN then
        return
    end
    
    Racer:SetKeyLeft(true)
    _G.ChocoboRaceMgr:ReqRaceCtrl(ProtoCS.ChocoboRaceCtrl.ChocoboRaceParamLeft, true)
end

function ChocoboInputConfig.OnReleased_A()
    local Racer = _G.ChocoboRaceMgr:GetRacerByIndex()
    if Racer == nil then return end

    if _G.ChocoboRaceMgr:GetGameState() ~= ChocoboDefine.GAME_STATE_ENUM.BEGIN then
        return
    end

    Racer:SetKeyLeft(false)
    _G.ChocoboRaceMgr:ReqRaceCtrl(ProtoCS.ChocoboRaceCtrl.ChocoboRaceParamLeft, false)
end

function ChocoboInputConfig.OnPressed_D()
    local Racer = _G.ChocoboRaceMgr:GetRacerByIndex()
    if Racer == nil then return end

    if _G.ChocoboRaceMgr:GetGameState() ~= ChocoboDefine.GAME_STATE_ENUM.BEGIN then
        return
    end

    Racer:SetKeyRight(true)
    _G.ChocoboRaceMgr:ReqRaceCtrl(ProtoCS.ChocoboRaceCtrl.ChocoboRaceParamRight, true)
end

function ChocoboInputConfig.OnReleased_D()
    local Racer = _G.ChocoboRaceMgr:GetRacerByIndex()
    if Racer == nil then return end

    if _G.ChocoboRaceMgr:GetGameState() ~= ChocoboDefine.GAME_STATE_ENUM.BEGIN then
        return
    end

    Racer:SetKeyRight(false)
    _G.ChocoboRaceMgr:ReqRaceCtrl(ProtoCS.ChocoboRaceCtrl.ChocoboRaceParamRight, false)
end

function ChocoboInputConfig.OnPressed_SpaceBar()
    local Racer = _G.ChocoboRaceMgr:GetRacerByIndex()
    if Racer == nil then return end

    if _G.ChocoboRaceMgr:GetGameState() ~= ChocoboDefine.GAME_STATE_ENUM.BEGIN then
        return
    end

    Racer:SetKeyJump(true)
    _G.ChocoboRaceMgr:ReqRaceCtrl(ProtoCS.ChocoboRaceCtrl.ChocoboRaceParamAbilityJump)
end

function ChocoboInputConfig.OnReleased_SpaceBar()
    local Racer = _G.ChocoboRaceMgr:GetRacerByIndex()
    if Racer == nil then return end

    if _G.ChocoboRaceMgr:GetGameState() ~= ChocoboDefine.GAME_STATE_ENUM.BEGIN then
        return
    end

    Racer:SetKeyJump(false)
end

ChocoboInputConfig.InputActionConfig = {
    { Key = "W", Event = IE_Pressed, Callback = ChocoboInputConfig.OnPressed_W },
    { Key = "W", Event = IE_Released, Callback = ChocoboInputConfig.OnReleased_W },
    { Key = "A", Event = IE_Pressed, Callback = ChocoboInputConfig.OnPressed_A},
    { Key = "A", Event = IE_Released, Callback = ChocoboInputConfig.OnReleased_A },
    { Key = "D", Event = IE_Pressed, Callback = ChocoboInputConfig.OnPressed_D },
    { Key = "D", Event = IE_Released, Callback = ChocoboInputConfig.OnReleased_D },
    { Key = "SpaceBar", Event = IE_Pressed, Callback = ChocoboInputConfig.OnPressed_SpaceBar },
    { Key = "SpaceBar", Event = IE_Released, Callback = ChocoboInputConfig.OnReleased_SpaceBar },
}

function ChocoboInputConfig:FindActionConfig(Key, Event)
    for _, v in pairs(ChocoboInputConfig.InputActionConfig) do
        if v.Key == Key and v.Event == Event then
            return v
        end
    end
end

return ChocoboInputConfig
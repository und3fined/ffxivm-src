---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2024/1/2 20:32
---

local LuaClass = require("Core/LuaClass")
local UIViewModel = require("UI/UIViewModel")
local ProtoRes = require("Protocol/ProtoRes")
local ChocoboRaceSkillDisplayCfg = require("TableCfg/ChocoboRaceSkillDisplayCfg")
local ChocoboRaceSkillCfg = require("TableCfg/ChocoboRaceSkillCfg")
local ChocoboUiIconCfg = require("TableCfg/ChocoboUiIconCfg")
local RichTextUtil = require("Utils/RichTextUtil")
local LSTR = _G.LSTR

---@class ChocoboSkillDetailTipsVM : UIViewModel
local ChocoboSkillDetailTipsVM = LuaClass(UIViewModel)

---Ctor
function ChocoboSkillDetailTipsVM:Ctor()
    self.SkillID = 0
    self.Name = ""
    self.Cost = ""
    self.CD = ""
    self.Desc = ""
    self.SkillTypeText = ""
    self.SkillTypePath = ""
    self.RarityText = ""
    self.RarityPath = ""
    self.IsShowCost = false
    self.IsShowCD = false
end

local function SafeFormat(FormatString, ...)
    if not FormatString then return "" end

    local Args = {...}
    local Result = {}
    local ArgIndex = 1
    local Len = #FormatString
    local Pos = 1

    while Pos <= Len do
        local Char = FormatString:sub(Pos, Pos)
        if Char == "%" then
            local NextChar = FormatString:sub(Pos + 1, Pos + 1)
            if NextChar == "d" or NextChar == "s" then
                -- 处理占位符 %d 或 %s
                table.insert(Result, Args[ArgIndex] or "")
                ArgIndex = ArgIndex + 1
                Pos = Pos + 2
            elseif NextChar == "%" then
                table.insert(Result, "%")
                Pos = Pos + 2  -- 跳过 %%
            else
                table.insert(Result, "%")
                Pos = Pos + 1
            end
        else
            table.insert(Result, Char)
            Pos = Pos + 1
        end
    end

    return table.concat(Result)
end

function ChocoboSkillDetailTipsVM:UpdateVM(SkillID)
    self.SkillID = SkillID
    local SkillEffectCfg = ChocoboRaceSkillCfg:FindCfgByKey(SkillID)
    local SkillDisplayCfg = ChocoboRaceSkillDisplayCfg:FindCfgByKey(SkillID)
    if SkillEffectCfg == nil or SkillDisplayCfg == nil then
        return 
    end
    
    self.Name = SkillDisplayCfg.Name
    self.IsShowCost = true
    self.Cost = LSTR(420088) .. " - "

    if SkillEffectCfg.Cost ~= nil then
        if SkillEffectCfg.Cost.Max > 0 then
            self.IsShowCost = true
            -- LSTR string: 消耗: 
            self.Cost = LSTR(420088) .. tostring(SkillEffectCfg.Cost.Max)
    --    else
    --        self.IsShowCost = false
        end
    --else
    --    self.IsShowCost = false
    end

    local CDText = LSTR(420089) .. " - "
    if SkillEffectCfg.Level[1].CD > 0 then
        local Path = RichTextUtil.GetTexture(ChocoboUiIconCfg:FindPathByKey(ProtoRes.CHOCOBO_UI_ICON_TYPE.ABILITIES_LEVEL_ICON_PATH_1), 40, 40, -8) or ""
        -- LSTR string: 冷却: 
        CDText = LSTR(420089) ..  CDText .. Path .. RichTextUtil.GetText(SkillEffectCfg.Level[1].CD .. "s/", "d1ba8e")
    end
    if SkillEffectCfg.Level[2].CD > 0 then
        local Path = RichTextUtil.GetTexture(ChocoboUiIconCfg:FindPathByKey(ProtoRes.CHOCOBO_UI_ICON_TYPE.ABILITIES_LEVEL_ICON_PATH_2), 40, 40, -8) or ""
        CDText = CDText .. Path .. RichTextUtil.GetText(SkillEffectCfg.Level[2].CD .. "s/", "d1ba8e")
    end
    if SkillEffectCfg.Level[3].CD > 0 then
        local Path = RichTextUtil.GetTexture(ChocoboUiIconCfg:FindPathByKey(ProtoRes.CHOCOBO_UI_ICON_TYPE.ABILITIES_LEVEL_ICON_PATH_3), 40, 40, -8) or ""
        CDText = CDText .. Path .. RichTextUtil.GetText(SkillEffectCfg.Level[3].CD .. "s", "d1ba8e")
    end

    --if CDText == "" then
    --    self.IsShowCD = false
    --else
        self.IsShowCD = true
        self.CD = CDText
    --end

    local DescParam = SkillEffectCfg.Level[1].Param
    if #DescParam == 0 then
        self.Desc = SkillDisplayCfg.Desc
    elseif #DescParam == 1 then
        self.Desc = SafeFormat(SkillDisplayCfg.Desc, DescParam[1])
    elseif #DescParam == 2 then
        self.Desc = SafeFormat(SkillDisplayCfg.Desc, DescParam[1], DescParam[2])
    end
    
    if SkillEffectCfg.Type == ProtoRes.CHOCOBO_RACE_SKILL_CASTING_TYPE.CHOCOBO_RACE_SKILL_CASTING_ACTIVE then
        -- LSTR string: 主动
        self.SkillTypeText = LSTR(420026)
        self.SkillTypePath = ChocoboUiIconCfg:FindPathByKey(ProtoRes.CHOCOBO_UI_ICON_TYPE.SKILL_TYPE_ACTIVE)
    elseif SkillEffectCfg.Type == ProtoRes.CHOCOBO_RACE_SKILL_CASTING_TYPE.CHOCOBO_RACE_SKILL_CASTING_PASSIVE then
        -- LSTR string: 被动
        self.SkillTypeText = LSTR(420027)
        self.SkillTypePath = ChocoboUiIconCfg:FindPathByKey(ProtoRes.CHOCOBO_UI_ICON_TYPE.SKILL_TYPE_PASSIVE)
    end
    if SkillEffectCfg.Rarity == ProtoRes.CHOCOBO_SKILL_QUALITY.CHOCOBO_SKILL_QUALITY_COMMON then
        -- LSTR string: 普通
        self.RarityText = LSTR(420090)
        self.RarityPath = ChocoboUiIconCfg:FindPathByKey(ProtoRes.CHOCOBO_UI_ICON_TYPE.SKILL_QUALITY_COMMO)
    elseif SkillEffectCfg.Rarity == ProtoRes.CHOCOBO_SKILL_QUALITY.CHOCOBO_SKILL_QUALITY_RARITY then
        -- LSTR string: 稀有
        self.RarityText = LSTR(420091)
        self.RarityPath = ChocoboUiIconCfg:FindPathByKey(ProtoRes.CHOCOBO_UI_ICON_TYPE.SKILL_QUALITY_RARITY)
    end
end

return ChocoboSkillDetailTipsVM
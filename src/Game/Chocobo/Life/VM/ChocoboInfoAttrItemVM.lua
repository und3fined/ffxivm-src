---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2023/12/19 20:08
---

local LuaClass = require("Core/LuaClass")
local UIViewModel = require("UI/UIViewModel")
local UIBindableList = require("UI/UIBindableList")
local ChocoboInfoAttrItemStarVM = require("Game/Chocobo/Life/VM/ChocoboInfoAttrItemStarVM")
local ChocoboUiIconCfg = require("TableCfg/ChocoboUiIconCfg")
local ProtoRes = require("Protocol/ProtoRes")
local ProtoCommon = require("Protocol/ProtoCommon")
local ChocoboMgr = nil

---@class ChocoboInfoAttrItemVM : UIViewModel
local ChocoboInfoAttrItemVM = LuaClass(UIViewModel)

---Ctor
function ChocoboInfoAttrItemVM:Ctor()
    ChocoboMgr = _G.ChocoboMgr
    self.AttrID = 0
    self.IsRent = false
    self.AttrName = ""
    self.AttrValue = ""
    self.BlueStarTableView = UIBindableList.New(ChocoboInfoAttrItemStarVM)
    self.RedStarTableView = UIBindableList.New(ChocoboInfoAttrItemStarVM)

    self.AttrIconPathCfg = {
        [ProtoCommon.ChocoboAttrType.AttrTypeMaxSpeed] = ChocoboUiIconCfg:FindPathByKey(ProtoRes.CHOCOBO_UI_ICON_TYPE.ATTR_MAX_SPEED),
        [ProtoCommon.ChocoboAttrType.AttrTypeSprintSpeed] = ChocoboUiIconCfg:FindPathByKey(ProtoRes.CHOCOBO_UI_ICON_TYPE.ATTR_SPRINT_SPEED),
        [ProtoCommon.ChocoboAttrType.AttrTypeSkillStrenth] = ChocoboUiIconCfg:FindPathByKey(ProtoRes.CHOCOBO_UI_ICON_TYPE.ATTR_SKILL_STRENGTH),
        [ProtoCommon.ChocoboAttrType.AttrTypeAcceleration] = ChocoboUiIconCfg:FindPathByKey(ProtoRes.CHOCOBO_UI_ICON_TYPE.ATTR_ACCELERATION),
        [ProtoCommon.ChocoboAttrType.AttrTypeStamina] = ChocoboUiIconCfg:FindPathByKey(ProtoRes.CHOCOBO_UI_ICON_TYPE.ATTR_STAMINA),
    }
end

function ChocoboInfoAttrItemVM:Clear()

end

function ChocoboInfoAttrItemVM:UpdateVM(Data)
    if Data == nil then return end

    self.IsRent = Data.IsRent
    if Data.AttrID ~=  nil then
        self.AttrID = Data.AttrID
        self.AttrIconPath = self.AttrIconPathCfg[self.AttrID]
    end
    if Data.AttrName ~=  nil then
        self.AttrName = Data.AttrName
    end
    if Data.AttrValue ~=  nil and Data.AttrValue ~= nil then 
        self.AttrValue = Data.AttrValue .. "/" .. Data.MaxAttrValue
        self.AttrValuePercent = Data.AttrValue / Data.MaxAttrValue
    end

    if Data.GeneRed ~= nil then
        local RedData = {}
        for i = 1, ChocoboMgr.GeneMaxStarNum do
            local TempData = {}
            if Data.GeneRed >= ChocoboMgr.GeneMaxStarNum then
                TempData.IsShwoImgStarM = true
            else
                TempData.IsShwoImgStarM = false
            end
            if i <= Data.GeneRed then
                TempData.IsShwoImgStarS = true
            else
                TempData.IsShwoImgStarS = false
            end
            table.insert(RedData, TempData)
        end
        self.RedStarTableView:UpdateByValues(RedData)
    end
    if Data.GeneBlue ~= nil then
        local BlueData = {}
        for i = 1, ChocoboMgr.GeneMaxStarNum do
            local TempData = {}
            if Data.GeneBlue >= ChocoboMgr.GeneMaxStarNum then
                TempData.IsShwoImgStarM = true
            else
                TempData.IsShwoImgStarM = false
            end
            if i <= Data.GeneBlue then
                TempData.IsShwoImgStarS = true
            else
                TempData.IsShwoImgStarS = false
            end
            table.insert(BlueData, TempData)
        end
        self.BlueStarTableView:UpdateByValues(BlueData)
    end
end

function ChocoboInfoAttrItemVM:IsEqualVM(Value)
    return Value ~= nil and Value.ID == self.ID
end

return ChocoboInfoAttrItemVM
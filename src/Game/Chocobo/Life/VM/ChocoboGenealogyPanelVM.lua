---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2023/12/28 19:38
---


local LuaClass = require("Core/LuaClass")
local UIViewModel = require("UI/UIViewModel")
local ProtoCS = require ("Protocol/ProtoCS")
local ChocoboGenerationItemVM = require("Game/Chocobo/Life/VM/ChocoboGenerationItemVM")
local ChocoboMgr = nil

---@class ChocoboGenealogyPanelVM : UIViewModel
local ChocoboGenealogyPanelVM = LuaClass(UIViewModel)

---Ctor
function ChocoboGenealogyPanelVM:Ctor()
    ChocoboMgr = _G.ChocoboMgr
    self.SelectGeneID = 1
    self.GenerationTabList = self:ResetBindableList(self.GenerationTabList, ChocoboGenerationItemVM)
end

function ChocoboGenealogyPanelVM:UpdateVM(Data)
    
end

function ChocoboGenealogyPanelVM:InitGeneList()
    local List = {}
    for i = 1, 9 do
        table.insert(List, {ID = i})
    end
    self.GenerationTabList:Clear()
    self.GenerationTabList:UpdateByValues(List)
end

function ChocoboGenealogyPanelVM:OnGeneSelectChange(ID)
    self.SelectGeneID = ID
    for i = 1, self.GenerationTabList:Length() do
        local ViewMode = self.GenerationTabList:Get(i)
        ViewMode:SetIsSelect(ID == i)
    end
end

function ChocoboGenealogyPanelVM:GetCurGeneDataList()
    local AllInfos = ChocoboMgr:GetChocoboAllInfoList()
    local Ret = {}
    for __, Value in pairs(AllInfos) do
        local Generation = (Value.Mating or {}).Generation
        if Generation == self.SelectGeneID and Value.Status ~= ProtoCS.ChocoboStatus.StatusMating and Value.IsRent == false then
            table.insert(Ret, Value)
        end
    end
    return Ret
end

return ChocoboGenealogyPanelVM
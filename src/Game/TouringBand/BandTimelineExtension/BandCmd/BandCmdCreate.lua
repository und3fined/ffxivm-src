---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2024/12/23 19:38
---

local LuaClass = require("Core/LuaClass")
local ActorUtil = require("Utils/ActorUtil")
local ProtoRes = require("Protocol/ProtoRes")
local BandCmdBase = require("Game/TouringBand/BandTimelineExtension/BandCmd/BandCmdBase")
local TouringBandNodeCreateCfg = require("TableCfg/TouringBandNodeCreateCfg")
local TouringBandUtil = require("Game/TouringBand/TouringBandUtil")
local TouringBandDefine = require("Game/TouringBand/TouringBandDefine")
local EventID = require("Define/EventID")
local TimeUtil = require("Utils/TimeUtil")

local BandCmdCreate = LuaClass(BandCmdBase)

function BandCmdCreate:OnInit()
    self.Name = "BandCmdCreate"
    self.EventType = ProtoRes.TOURING_BAND_TIMELINE_EVENT_PARENT_TYPE.TB_EVENT_BAND_CREATE
end

function BandCmdCreate:OnStart()
    if self.Param == nil then
        TouringBandUtil.Err("BandCmdCreate.OnStart Create Failed ID =  : " .. self.ID)
        return
    end

    local Timeline = _G.BandTimelineMgr:GetTimelineByID(self.TimelineID)
    if Timeline == nil then
        TouringBandUtil.Err("BandCmdCreate.OnStart Create Failed Timeline =  : " .. self.TimelineID)
        return
    end
    local Member = Timeline:GetMemberEntityIDList()
    local ClipID = self.Param[1] or 0
    local CfgList = TouringBandNodeCreateCfg:FindAllCfg(string.format("ClipID = %d", ClipID))

    for __, Item in ipairs(CfgList) do
        local NpcResID = Item.Param[1]
        local NpcActor = ActorUtil.GetActorByResIDAndListID(NpcResID, self.TimelineID)
        if NpcActor == nil then
            local Index = Item.Target or 0
            local Type = _G.UE.EActorType.Npc
            local yBaseRotation = self.Param[6] or 0
            local yNewRotation = self.Param[5] or 0
            local xOffset = (Item.Param[2] or 0) + (self.Param[2] or 0)
            local yOffset = (Item.Param[3] or 0) + (self.Param[3] or 0)
            local zOffset = (Item.Param[4] or 0) + (self.Param[4] or 0)
            if Item.Event == ProtoRes.TOURING_BAND_TIMELINE_EVENT_SUB_TYPE.TB_SUB_CREATE_EOBJ then
                Type = _G.UE.EActorType.EObj
                xOffset = self.CenterPos.X + (Item.Param[2] or 0)
                yOffset = self.CenterPos.Y + (Item.Param[3] or 0)
                zOffset = self.CenterPos.Z
            end
            
            xOffset, yOffset = TouringBandUtil.CombinedRotation(xOffset, yOffset, self.CenterPos.X, self.CenterPos.Y, yBaseRotation, yNewRotation)
            local Location = _G.UE.FVector(xOffset, yOffset, zOffset)
            local Rotation = _G.UE.FRotator(0, (Item.Param[5] or 0) + (self.Param[5] or 0), 0)
            local EntityID = _G.UE.UActorManager.Get():CreateClientActor(Type, self.TimelineID, NpcResID, Location, Rotation)
            Member[Index] = EntityID or 0
            
            if Item.Event == ProtoRes.TOURING_BAND_TIMELINE_EVENT_SUB_TYPE.TB_SUB_CREATE_EOBJ then
                Timeline.ModelCreationFlags[Index] = true
            end
            
            local TargetNpc = ActorUtil.GetActorByEntityID(EntityID)
            if TargetNpc ~= nil and TargetNpc:IsMeshLoaded() then
                -- 从缓存中加载，就不会走组装逻辑了
                if Index == ProtoRes.TOURING_BAND_TIMELINE_EVENT_TARGET_TYPE.TB_TARGET_NPC_1 or
                        Index == ProtoRes.TOURING_BAND_TIMELINE_EVENT_TARGET_TYPE.TB_TARGET_NPC_2 or
                        Index == ProtoRes.TOURING_BAND_TIMELINE_EVENT_TARGET_TYPE.TB_TARGET_NPC_3 or
                        Index == ProtoRes.TOURING_BAND_TIMELINE_EVENT_TARGET_TYPE.TB_TARGET_NPC_4  or
                        Index == ProtoRes.TOURING_BAND_TIMELINE_EVENT_TARGET_TYPE.TB_TARGET_VIEWER_1  or
                        Index == ProtoRes.TOURING_BAND_TIMELINE_EVENT_TARGET_TYPE.TB_TARGET_VIEWER_2  or
                        Index == ProtoRes.TOURING_BAND_TIMELINE_EVENT_TARGET_TYPE.TB_TARGET_VIEWER_3  or
                        Index == ProtoRes.TOURING_BAND_TIMELINE_EVENT_TARGET_TYPE.TB_TARGET_VIEWER_4  or
                        Index == ProtoRes.TOURING_BAND_TIMELINE_EVENT_TARGET_TYPE.TB_TARGET_VIEWER_5  or
                        Index == ProtoRes.TOURING_BAND_TIMELINE_EVENT_TARGET_TYPE.TB_TARGET_MANAGER then
                    TargetNpc:AdjustGround(false)
                    local AvatarComp = TargetNpc:GetAvatarComponent()
                    if AvatarComp then
                        -- 隱藏一下乐器
                        AvatarComp:SetAvatarHiddenInGame(_G.UE.EAvatarPartType.WEAPON_SYSTEM, true, false, false)
                    end
                end

                Timeline.ModelCreationFlags[Index] = true
            end
        else
            local AttributeCom = NpcActor:GetAttributeComponent()
            if _G.UE.UCommonUtil.IsObjectValid(AttributeCom) then
                local Index = Item.Target or 0
                Member[Index] = AttributeCom.EntityID or 0
            end
            TouringBandUtil.Err("BandCmdCreate.OnStart NpcActor Has Created NpcResID =  : " .. NpcResID)
        end
    end
    _G.EventMgr:SendEvent(EventID.TouringBandStatesChange, { TimelineID = self.TimelineID, Key = TouringBandDefine.STATES_TYPE.CREATE , Value = true })

    --常驻乐团沒有入场和离场
    if Timeline.IsLoop then
        _G.EventMgr:SendEvent(EventID.TouringBandStatesChange, { TimelineID = self.TimelineID, Key = TouringBandDefine.STATES_TYPE.COME_ON , Value = true })
        _G.EventMgr:SendEvent(EventID.TouringBandStatesChange, { TimelineID = self.TimelineID, Key = TouringBandDefine.STATES_TYPE.MOVE_IN_END , Value = true })
    else
        if TimeUtil.GetServerLogicTime() - self.StartTime < 10 then
            local EobjActor = ActorUtil.GetActorByEntityID(Member[ProtoRes.TOURING_BAND_TIMELINE_EVENT_TARGET_TYPE.TB_TARGET_EOBJ])
            if EobjActor then
                --local EobjActorPos = EobjActor:FGetLocation(_G.UE.EXLocationType.ActorLoc)
                --local TraceBeginLocation = EobjActorPos + _G.UE.FVector(0, 0, 200)
                --local TraceEndLocation = EobjActorPos + _G.UE.FVector(0, 0, -1000)
                --local TraceUtil = _G.UE.UTraceUtil
                --if TraceUtil then
                --    local HitOut = _G.UE.FHitResult()
                --    local Channel = _G.UE.ECollisionChannel.ECC_WorldStatic
                --    local World = _G.UE.UFGameInstance.Get():GetWorld()
                --    if TraceUtil.LineTrace(World, EobjActor, TraceBeginLocation, TraceEndLocation, HitOut, Channel, false, true) then
                --        FLOG_ERROR("HitFloor: %f", HitOut.Location.Z)
                --        EobjActorPos.Z = HitOut.Location.Z
                --        --EobjActor:FSetVectorForServer(EobjActorPos, _G.UE.EXLocationType.ActorLoc)
                --    end
                --end

                EobjActor:SetSharedGroupTimelineState(4)
            end
        end
    end
end

function BandCmdCreate:OnTriggerEventAfterStartTime()
    self:OnStart()
end

function BandCmdCreate:OnDestroy()
    
end

return BandCmdCreate
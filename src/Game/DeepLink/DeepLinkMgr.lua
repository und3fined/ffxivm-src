---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by richyczhou.
--- DateTime: 2025/3/11 14:40
---

local AccountUtil = require("Utils/AccountUtil")
local EventID = require("Define/EventID")
local EventMgr = require("Event/EventMgr")
local LuaClass = require("Core/LuaClass")
local MgrBase = require("Common/MgrBase")
local UIViewID = require("Define/UIViewID")
local UIViewMgr = require("UI/UIViewMgr")

local FLOG_INFO = _G.FLOG_INFO
local FLOG_WARNING = _G.FLOG_WARNING
local FLOG_ERROR = _G.FLOG_ERROR

---@class DeepLinkMgr : MgrBase
local DeepLinkMgr = LuaClass(MgrBase)

local DeepLinkActionType = {
    None = 0,
    OpenUrl = 1,
    OpenUI = 2,
}

function DeepLinkMgr:Ctor()
    self.NeedToDoAction = false
    self.ActionType = nil
    self.ParamList = nil
end

function DeepLinkMgr:OnInit()
    FLOG_INFO("[DeepLinkMgr:OnInit] ")
end

function DeepLinkMgr:OnBegin()
    FLOG_INFO("[DeepLinkMgr:OnBegin] ")
    local DeepLinkData = _G.UE.UDeepLinkMgr.Get():GetDeepLinkData()
    self:ParseDeepLinkData(DeepLinkData)
end

function DeepLinkMgr:OnEnd()

end

function DeepLinkMgr:OnShutdown()

end

function DeepLinkMgr:OnRegisterGameEvent()
    self:RegisterGameEvent(EventID.DeepLinkNotify, self.TryDoActionAutomatic)
end

--- 打开Url或界面(C++调)
function DeepLinkMgr:TryDoActionAutomatic(Data)
    self:ParseDeepLinkData(Data)
    self:TryDoActionInternal()
end

--- 打开Url或界面(Lua调)
function DeepLinkMgr:TryDoActionManual()
    self:TryDoActionInternal()
end

--- DeepLink数据解析
---@param Data string JUMPOPEx_类型_参数A_参数B_参数C_参数D
function DeepLinkMgr:ParseDeepLinkData(Data)
    if Data == "" or Data == nil then
        return
    end

    FLOG_INFO("[DeepLinkMgr:ParseDeepLinkData] Data:%s", Data)
    local startPos = string.find(Data, "JUMPOPEx")
    if not startPos then
        FLOG_INFO("[DeepLinkMgr:ParseDeepLinkData] Can't found JUMPOPEx")
        return
    end

    local parts = {}
    for part in string.gmatch(Data, "[^_]+") do
        table.insert(parts, part)
    end

    -- 检查分割后的结果
    if #parts > 1 then
        --if "JUMPOPEx" ~= parts[1] then
        --    return
        --end

        self.NeedToDoAction = true

        self.ActionType = tonumber(parts[2])
        print("[DeepLinkMgr:ParseDeepLinkData] ActionType:", self.ActionType)

        self.ParamList = {}
        if #parts > 2 then
            for i = 3, #parts do
                table.insert(self.ParamList, parts[i])
                print("[DeepLinkMgr:ParseDeepLinkData] ParamList:", parts[i])
            end
        end
    else
        FLOG_WARNING("[DeepLinkMgr:DoDeepLinkAction] Invalid DeepLink format")
    end
end

function DeepLinkMgr:TryDoActionInternal()
    if self.NeedToDoAction == false then
        return
    end

    local WorldMsgMgr = _G.WorldMsgMgr
    local CurWorldName = WorldMsgMgr:GetWorldName()
    if WorldMsgMgr:IsLogin(CurWorldName) or WorldMsgMgr:IsCreateRoleMap(CurWorldName) or WorldMsgMgr:IsSpecialLoginMap(CurWorldName) then
        FLOG_WARNING("[DeepLinkMgr:TryDoActionInternal] Invalid map:%s", CurWorldName)
        return
    end

    self.NeedToDoAction = false

    if self.ActionType == DeepLinkActionType.OpenUrl then
        self:TryOpenUrl()
    elseif self.ActionType == DeepLinkActionType.OpenUI then
        self:TryOpenUI()
    end
end

function DeepLinkMgr:TryOpenUrl()
    if self.ActionType == DeepLinkActionType.OpenUrl then
        if #self.ParamList > 0 then
            -- 参数A: Url链接
            local Url = self.ParamList[1]
            FLOG_INFO("[DeepLinkMgr:TryOpenUrl] Url:%s", Url)
            local DecodedUrl = self:UrlDecode(Url)
            FLOG_INFO("[DeepLinkMgr:TryOpenUrl] DecodedUrl:%s", DecodedUrl)

            -- TODO Host白名单

            local ScreenType = 1
            local IsFullScreen = false
            if #self.ParamList > 1 then
                -- 参数B: 1 表示横屏, 2 表示竖屏,4 表示全屏，可与横竖屏参数通过 逻辑或 操作进行组合,5=1+4 表示横屏+全屏,6=2+4 表示竖屏+全屏
                local ParamB = tonumber(self.ParamList[2])
                if ParamB == 1 then
                    ScreenType = 1
                    IsFullScreen = false
                elseif ParamB == 2 then
                    ScreenType = 2
                    IsFullScreen = false
                elseif ParamB == 4 then
                    ScreenType = 1
                    IsFullScreen = true
                elseif ParamB == 5 then
                    ScreenType = 1
                    IsFullScreen = true
                elseif ParamB == 6 then
                    ScreenType = 2
                    IsFullScreen = true
                end
            end
            AccountUtil.OpenTokenLinkUrl(DecodedUrl, ScreenType, IsFullScreen, true, "", false)
        end
    end
end

function DeepLinkMgr:TryOpenUI()
    if self.ActionType == DeepLinkActionType.OpenUI then
        if #self.ParamList > 0 then
            local ViewID = tonumber(self.ParamList[1])
            if ViewID and ViewID > 0 then
                FLOG_INFO("[DeepLinkMgr:TryOpenUI] ViewID:%d", ViewID)
                -- TODO 添加参数
                UIViewMgr:ShowView(ViewID)
            end
        end
    end
end

function DeepLinkMgr:UrlDecode(encodedStr)
    local decodedStr = encodedStr:gsub("%%(%x%x)", function(hex)
        return string.char(tonumber(hex, 16))
    end)
    return decodedStr
end

return DeepLinkMgr
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by richyczhou.
--- DateTime: 2024/6/28 20:43
---

---@class LoginDateUtils
local LoginDateUtils = {}

function LoginDateUtils:GetDaysInMonth(Month, Year)
    --Month = Month or os.date("*t").month
    --Year = Year or os.date("*t").year
    --local t1 = os.time{year = Year, month = Month +1, day = 1}
    --local t2 = os.time{year = Year, month = Month, day = 1}
    --local d = os.difftime(t1, t2)
    --return d / (60 * 60 * 24) -- convert seconds to days

    if Month == 2 then
        if Year % 4 == 0 and (Year % 100 ~= 0 or Year % 400 == 0) then
            return 29
        else
            return 28
        end
    elseif Month == 4 or Month == 6 or Month == 9 or Month == 11 then
        return 30
    else
        return 31
    end

end

function LoginDateUtils:GetYears()
    --{
    --    Name = "Name1",
    --    IconPath="IconPath1",
    --    IsShowIcon = bool,
    --    RightIconPath="RightIconPath1",
    --    IsShowRightIcon = bool,
    --    ClickFunc = 1,
    --    IsNew = bool,
    --    ItemData = {}
    --}

    local Years = {}
    -- table.insert(Years, { Name = "YYYY" })
    for i = 2024, 1900, -1 do
        table.insert(Years, { Name = i })
    end
    return Years
end

function LoginDateUtils:GetMonths()
    local Months = {}
    -- table.insert(Months, { Name = "MM" })
    for i = 1, 12 do
        table.insert(Months, { Name = i })
    end
    return Months
end

function LoginDateUtils:GetDays(Month, Year, DayLen)
    local Days = {}
    -- table.insert(Days, { Name = "DD" })
    if not DayLen then
        DayLen = LoginDateUtils:GetDaysInMonth(Month, Year)
    end
    for i = 1, DayLen do
        table.insert(Days, { Name = i })
    end
    return Days
end

return LoginDateUtils
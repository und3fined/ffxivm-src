---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by yuhang_lightpaw
--- DateTime: 2024/11/4 16:59
---

local LuaClass = require("Core/LuaClass")
local MapMarkerProvider = require("Game/Map/MarkerProvider/MapMarkerProvider")
local MapMarkerChocoboRacer = require("Game/Map/Marker/MapMarkerChocoboRacer")
local MapDefine = require("Game/Map/MapDefine")
local MajorUtil = require("Utils/MajorUtil")

local MapMarkerType = MapDefine.MapMarkerType


---@class MapMarkerProviderChocoboRacer : MapMarkerProvider
local MapMarkerProviderChocoboRacer = LuaClass(MapMarkerProvider)

function MapMarkerProviderChocoboRacer:Ctor()

end

function MapMarkerProviderChocoboRacer:GetMarkerType()
    return MapMarkerType.ChocoboRacer
end

function MapMarkerProviderChocoboRacer:OnGetMarkers(UIMapID)
    return self:CreateChocoboRacerMarkers()
end

function MapMarkerProviderChocoboRacer:CreateChocoboRacerMarkers()
    local MapMarkers = {}

    if not _G.ChocoboRaceMgr:IsChocoboRacePWorld() then
        return MapMarkers
    end

    local MajorRoleID = MajorUtil.GetMajorRoleID()
    for _, RoleID, EntityID in _G.ChocoboRaceMgr:IterChocoboRacer() do
        if RoleID ~= MajorRoleID then
            local Params = { ID = EntityID, RoleID = RoleID, EntityID = EntityID }
            local Marker = self:OnCreateMarker(Params)
            table.insert(MapMarkers, Marker)
        end
    end

    return MapMarkers
end

function MapMarkerProviderChocoboRacer:OnCreateMarker(Params)
    local Marker = self:CreateMarker(MapMarkerChocoboRacer, Params.ID, Params)
    if nil == Marker then
        return
    end

    return Marker
end

function MapMarkerProviderChocoboRacer:UpdateAllChocoboRacer()
    self:ClearMarkers()
    self:UpdateMarkers()
end

function MapMarkerProviderChocoboRacer:ClearChocoboRacerMarkers()
    self:ClearMarkers()
end

return MapMarkerProviderChocoboRacer
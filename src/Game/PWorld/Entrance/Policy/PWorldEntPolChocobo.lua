---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2024/1/22 16:02
---

local LuaClass = require("Core/LuaClass")
local SceneEnterCfg = require("TableCfg/SceneEnterCfg")
local PworldCfg = require("TableCfg/PworldCfg")
local PWorldEntUtil = require("Game/PWorld/Entrance/PWorldEntUtil")
local PWorldEntPol = require("Game/PWorld/Entrance/Policy/PWorldEntPol")
local PolUtil = require("Game/PWorld/Entrance/Policy/PWorldEntPolUtil")
local GlobalCfg = require("TableCfg/GlobalCfg")
local ProtoRes = require("Protocol/ProtoRes")
local PWorldEntDefine = require("Game/PWorld/Entrance/PWorldEntDefine")
local ProtoCommon = require("Protocol/ProtoCommon")

local PWorldEntPolChocobo = LuaClass(PWorldEntPol)

function PWorldEntPolChocobo:CheckJoinPre(EntID)
    local Ret = {
        IsPassMem = true,
        IsPassLv = true,
        IsPassEquipLv = true,
    }
    return true, Ret
end

function PWorldEntPolChocobo:CheckFilter(EntID)
    local QID = 150221
    local Cfg = GlobalCfg:FindValue(ProtoRes.global_cfg_id.GlobalCfgChocoboNewbieQuest, "Value")
    if Cfg ~= nil and Cfg[1] ~= nil then
        QID = Cfg[1]
    end
    return PolUtil.HasPreQuestFinish(QID)
end

function PWorldEntPolChocobo:CheckEnter(EntID)
    return false
end

function PWorldEntPolChocobo:CheckJoin()
    local PWorldEntDetailVM = _G.PWorldEntDetailVM
    local Mode = PWorldEntDetailVM.TaskType

    -- 惩罚
    if PWorldEntDetailVM.HasPunished then
        return PWorldEntDefine.JoinErrorCode.CodeMatchTeammetaPunishment
    end

    if Mode == ProtoCommon.SceneMode.SceneModeNormal then
        local HasTeam = _G.TeamMgr:IsInTeam()
        if HasTeam then
            return PWorldEntDefine.JoinErrorCode.CodeMatchChocoboTeamRestriction
        end
    end
end

function PWorldEntPolChocobo:GetRewardData(EntCfg)
    local RewardsData = {}

    if not EntCfg then
        return
    end

    local Cfg = EntCfg

    local FirstPassRewards = Cfg.InitialRewards
    local NormalRewards = Cfg.Rewards

    for Idx, ID in ipairs(FirstPassRewards) do
        local Cnt = Cfg.InitialRewardCnt[Idx] or 0
        local Data = PolUtil.MakeRewardData(ID, Cnt, PWorldEntDefine.RewardType.FirstPass, Cfg.ID)
        table.insert(RewardsData, Data)
    end

    for Idx, ID in ipairs(NormalRewards) do
        local Cnt = Cfg.RewardCnt[Idx] or 0
        local Data = PolUtil.MakeRewardData(ID, Cnt, PWorldEntDefine.RewardType.Norm, Cfg.ID)
        table.insert(RewardsData, Data)
    end

    return RewardsData
end

function PWorldEntPolChocobo:GetEntInfo(EntID, SubType)
    local Ret = {
        EntCfg                  = nil,
        PWorldID                = nil,
        BG                      = nil,
        PWorldName              = nil,
        MaxMatchCnt             = nil,
        PWorldRequireLv         = nil,
        PWorldRequireEquipLv    = nil,
        PWorldSyncLv            = nil,
        IsChocoboRandomTrack    = nil,
    }

    local EntCfg = SceneEnterCfg:FindCfgByKey(EntID)
    Ret.EntCfg = EntCfg

    Ret.PWorldID = EntCfg.ID
    Ret.BG = EntCfg.BG

    Ret.MaxMatchCnt = PWorldEntDefine.NormMatchMaxCnt

    Ret.IsChocoboRandomTrack = PWorldEntUtil.IsChocoboRandomTrack(SubType)
    
    local PCfg = PworldCfg:FindCfgByKey(Ret.PWorldID)
    if PCfg then
        if Ret.IsChocoboRandomTrack then
            -- LSTR string: 陆行鸟竞赛 随机赛道
            Ret.PWorldName = _G.LSTR(430008)
            Ret.BG = PWorldEntDefine.ChocoboRandomTrackDetailsImagePath
        else
            Ret.PWorldName = PCfg.PWorldName
        end
        Ret.PWorldRequireLv = PCfg.PlayerLevel
    else
        _G.FLOG_ERROR("PWorldEntPolChocobo.UpdateVM PCfg = nil PWorldID = " .. tostring(Ret.PWorldID) )
    end

    return Ret
end

return PWorldEntPolChocobo



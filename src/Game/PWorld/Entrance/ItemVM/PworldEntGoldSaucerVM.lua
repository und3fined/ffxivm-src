---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2024/8/16 16:24
---

local LuaClass = require("Core/LuaClass")
local UIViewModel = require("UI/UIViewModel")
local SceneEnterTypeCfg = require("TableCfg/SceneEnterTypeCfg")
local PWorldEntUtil = require("Game/PWorld/Entrance/PWorldEntUtil")
local ClientGlobalCfg = require("TableCfg/ClientGlobalCfg")
local ProtoRes = require("Protocol/ProtoRes")
local TutorialDefine = require("Game/Tutorial/TutorialDefine")

local PworldEntGoldSaucerVM = LuaClass(UIViewModel)

function PworldEntGoldSaucerVM:Ctor()
    self.TypeID = 0
    self.IsMatching = false
    self.IsUnlock = true
    self.IsOpen = true
    self.bShowStatus = false
    self.StatusImage = ""
    self.StatusText = ""
end

function PworldEntGoldSaucerVM:UpdateVM(Data)
    self.TypeID = Data.ID

    self:UpdMatch()
    self:UpdLock()

    self:UpdateStatus()
end

function PworldEntGoldSaucerVM:UpdMatch()
    local EntSet = SceneEnterTypeCfg:GetPWorldEntIDs(self.TypeID) or {}
    local Matches = _G.PWorldMatchMgr:GetMatchChocoboItems()
    local HasOverlap = table.set_has_overlap(EntSet, Matches)
    self.IsMatching = HasOverlap
    self:UpdateStatus()
end

function PworldEntGoldSaucerVM:UpdLock()
    local TableData = ClientGlobalCfg:FindCfgByKey(ProtoRes.client_global_cfg_id.GLOBAL_CFG_CHOCOBO_RACE_MATCH_ISUNLOCK)
    if (TableData ~= nil) then
        self.IsOpen = TableData.Value[1] == 1
    end
    
    local EntSet = SceneEnterTypeCfg:GetPWorldEntIDs(self.TypeID) or {}
    local Rlt = false
    for _, EntID in pairs(EntSet) do
        local Pol = PWorldEntUtil.GetPol(EntID, self.TypeID)
        local IsCheckOK = Pol:CheckFilter(EntID)
        Rlt = Rlt or IsCheckOK
        if Rlt then
            break
        end
    end
    
    self.IsUnlock = Rlt and self.IsOpen
    if self.IsUnlock then
        local function ShowChocoboUnlockTutorial(Params)
            local EventParams = _G.EventMgr:GetEventParams()
            EventParams.Type = TutorialDefine.TutorialConditionType.UnlockGameplay--新手引导触发类型
            EventParams.Param1 = TutorialDefine.GameplayType.Chocobo
            _G.NewTutorialMgr:OnCheckTutorialStartCondition(EventParams)
        end

        local TutorialConfig = {Type = ProtoRes.tip_class_type.TIP_SYS_GUIDE, Callback = ShowChocoboUnlockTutorial, Params = {}}
        _G.TipsQueueMgr:AddPendingShowTips(TutorialConfig)
    end
    self:UpdateStatus()
end

function PworldEntGoldSaucerVM:UpdateStatus()
    self.bShowStatus = self.IsMatching or (not self.IsUnlock)
    if self.IsMatching then
        self.StatusImage = "PaperSprite'/Game/UI/Atlas/HUD/Frames/UI_Icon_061517_png.UI_Icon_061517_png'"
        self.StatusText = _G.LSTR(1320008) --匹配中
    elseif not self.IsOpen then
        self.StatusImage = "PaperSprite'/Game/UI/Atlas/HUDQuest/Frames/UI_Icon_Hud_Main_Go_png.UI_Icon_Hud_Main_Go_png'"
        self.StatusText = _G.LSTR(1320214) -- 暂未开放
    elseif not self.IsUnlock then
        self.StatusImage = "PaperSprite'/Game/UI/Atlas/HUDQuest/Frames/UI_Icon_Hud_Plus_Missed_png.UI_Icon_Hud_Plus_Missed_png'"
        self.StatusText = _G.LSTR(1320215) -- 任务解锁
    end
end

return PworldEntGoldSaucerVM